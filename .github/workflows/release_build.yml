name: Release KSSH

on:
  push:
    tags:
      - "*"

jobs:
  builds:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-x64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-x64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
          - name: win-arm64
            runner: windows-latest
            target: aarch64-pc-windows-msvc
          - name: macos-x64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23
      - name: Build darwin
        if: matrix.runner == 'macos-latest'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          export CGO_ENABLE=1
          go mod tidy
          go build -o kssh-${{ matrix.name }} .
          gh release upload ${{ github.ref_name }} kssh-${{ matrix.name }}
      - name: Build linux
        if: matrix.runner == 'ubuntu-latest'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          export CGO_ENABLE=1
          go mod tidy
          go build -o kssh-${{ matrix.name }} .
          gh release upload ${{ github.ref_name }} kssh-${{ matrix.name }}
      - name: Build windows
        if: matrix.runner == 'windows-latest'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $env:CGO_ENABLE=1
          go mod tidy
          go build -o kssh-${{ matrix.name }}.exe .
          gh release upload ${{ github.ref_name }} kssh-${{ matrix.name }}.exe
